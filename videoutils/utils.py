#AUTOGENERATED! DO NOT EDIT! File to edit: dev/00_utils.ipynb (unless otherwise specified).

__all__ = ['__all__', 'as_normalised_tensor', 'bgr2rgb', 'bgr2hsv', 'lapply']

#Cell
import cv2
import numpy as np
import torch
from matplotlib.pyplot import imshow
from typing import Any, Union, Optional, Callable

#Cell
__all__ = ['makedir', 'get_nframes', 'get_fps', 'as_tensor', 'as_img',
           'bgr2rgb', 'bgr2hsv', 'lapply', 'pil2tensor', 'Image',
           'load_model', 'download_model']

#Cell
def as_normalised_tensor(x: np.ndarray) -> torch.Tensor:
    """`np.float32` array --> normalised `torch.Tensor`"""
    return as_tensor(x, np.float32).div_(255)

#Cell
def bgr2rgb(x: np.ndarray) -> np.ndarray:
    """convert cv2 generated image array from BGR to RGB"""
    return cv2.cvtColor(x, cv2.COLOR_BGR2RGB)

#Cell
def bgr2hsv(x: np.ndarray) -> np.ndarray:
    """convert cv2 generated image array from BGR to HSV"""
    return cv2.cvtColor(x, cv2.COLOR_BGR2HSV)

#Cell
def lapply(x: Any, func: Callable) -> list:
    """Apply `func` to each element in list `x`"""
    return [func(i) for i in x]