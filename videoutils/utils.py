#AUTOGENERATED! DO NOT EDIT! File to edit: dev/00_utils.ipynb (unless otherwise specified).

__all__ = ['__all__', 'as_tensor', 'as_normalised_tensor', 'bgr2rgb', 'bgr2hsv', 'lapply']

#Cell
import cv2
import numpy as np
import torch
from matplotlib.pyplot import imshow
from typing import Any, Union, Optional, Callable

#Cell
__all__ = ['as_tensor', 'as_normalised_tensor',
           'bgr2rgb', 'bgr2hsv', 'lapply',
           'Any', 'Union', 'Optional', 'Callable',
           'np', 'torch', 'imshow', 'cv2']

#Cell

## SOURCE --> https://github.com/fastai/fastai/blob/master/fastai/vision/image.py#L14
def as_tensor(image, dtype:np.dtype = np.float32) -> torch.Tensor:
    "Convert PIL style `image` array to torch style image tensor."
    a = np.asarray(image)
    if a.ndim==2 : a = np.expand_dims(a,2)
    a = np.transpose(a, (1, 0, 2))
    a = np.transpose(a, (2, 1, 0))
    return torch.from_numpy(a.astype(dtype, copy=False) )

#Cell
def as_normalised_tensor(x: np.ndarray) -> torch.Tensor:
    """`np.float32` array --> normalised `torch.Tensor`"""
    return as_tensor(x, np.float32).div_(255)

#Cell
def bgr2rgb(x: np.ndarray) -> np.ndarray:
    """convert cv2 generated image array from BGR to RGB"""
    return cv2.cvtColor(x, cv2.COLOR_BGR2RGB)

#Cell
def bgr2hsv(x: np.ndarray) -> np.ndarray:
    """convert cv2 generated image array from BGR to HSV"""
    return cv2.cvtColor(x, cv2.COLOR_BGR2HSV)

#Cell
def lapply(x: Any, func: Callable) -> list:
    """Apply `func` to each element in list `x`"""
    return [func(i) for i in x]